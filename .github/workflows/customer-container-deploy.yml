name: Customer Container Deploy
on:
  workflow_call:
    inputs:
      CUSTOMER-CONTAINER-NAME:
        required: true
        type: string
      CUSTOMER-ENV-NAME:
        required: true
        type: string
      VNET-NAME:
        required: true
        type: string
      SUBNET-NAME:
        required: true
        type: string
jobs:
    
    deploy:
   
      runs-on: ubuntu-latest

      steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: "containerappsvault"
          secrets: 'SERVICE-PRINCIPAL-ID, SERVICE-PRINCIPAL-PASSWORD'
        id: myAppsDeploySecrets

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            echo "Cleanup Container Apps Env, SUBNET, VNET"
            az containerapp env delete -n ${{  inputs.CUSTOMER-ENV-NAME }} -g ${{ secrets.RG_NAME }}
            az network vnet subnet delete --name ${{  inputs.SUBNET-NAME }} --resource-group ${{ secrets.RG_NAME }} --vnet-name ${{  inputs.VNET-NAME }}
            echo "Create new instances"
            az network vnet create --resource-group ${{ secrets.RG_NAME }} --name ${{  inputs.VNET-NAME }} --location ${{  secrets.RG_LOCATION }} --address-prefix 10.0.0.0/16
            az network vnet subnet create --resource-group ${{ secrets.RG_NAME }} --vnet-name ${{  inputs.VNET-NAME }} --name ${{  inputs.SUBNET-NAME }} --address-prefixes 10.0.0.0/21
            INFRASTRUCTURE_SUBNET_ID=$(az network vnet subnet show --resource-group ${{ secrets.RG_NAME }} --vnet-name infrastructure-vnet --name infrastructure-subnet --query "id" -o tsv | tr -d '[:space:]')
            echo "Subnet-id" $INFRASTRUCTURE_SUBNET_ID
            az containerapp env create --name ${{  inputs.CUSTOMER-ENV-NAME }} --resource-group ${{  secrets.RG_NAME }} --location ${{  secrets.RG_LOCATION }} --infrastructure-subnet-resource-id $INFRASTRUCTURE_SUBNET_ID --internal-only
            eacho "Last step - container app setup"
            az containerapp create --name ${{ inputs.CUSTOMER-CONTAINER-NAME }} --resource-group ${{ secrets.RG_NAME }} --environment ${{  inputs.CUSTOMER-ENV-NAME }} --registry-server ${{ secrets.ACR_NAME }}.azurecr.io --image ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest --registry-username  ${{ steps.myAppsDeploySecrets.outputs.SERVICE-PRINCIPAL-ID }} --registry-password ${{ steps.myAppsDeploySecrets.outputs.SERVICE-PRINCIPAL-PASSWORD }} --target-port 80 --ingress external
