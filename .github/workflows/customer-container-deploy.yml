name: Customer Container Deploy
on:
  workflow_call:
    inputs:
      CUSTOMER-CONTAINER-NAME:
        required: true
        type: string
      CUSTOMER-ENV-NAME:
        required: false
        type: string
jobs:
    
    deploy:
   
      runs-on: ubuntu-latest

    
      steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Print vairables
        run: |
          echo "This is RG_NAME2" ${{  secrets.RG_NAME }}


      
      - uses: Azure/get-keyvault-secrets@v1
        with: 
          keyvault: "containerappsvault"
          secrets: 'SERVICE-PRINCIPAL-ID, SERVICE-PRINCIPAL-PASSWORD'
        id: myAppsDeploySecrets

      - name: Deploy to containerapp
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp env create --name ${{  inputs.CUSTOMER-ENV-NAME }} --resource-group ${{  secrets.RG_NAME }} --location ${{  secrets.RG_LOCATION }}
            az containerapp create -n ${{ inputs.CUSTOMER-CONTAINER-NAME }} -g ${{ secrets.RG_NAME }} --image ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest --environment ${{  inputs.CUSTOMER-ENV-NAME }} --registry-server ${{ secrets.ACR_NAME }}.azurecr.io --registry-username  ${{ steps.myAppsDeploySecrets.outputs.SERVICE-PRINCIPAL-ID }} --registry-password ${{ steps.myAppsDeploySecrets.outputs.SERVICE-PRINCIPAL-PASSWORD }} --target-port 80 --ingress external
