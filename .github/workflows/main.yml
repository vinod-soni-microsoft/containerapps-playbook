name: Container Apps Workflow
on:
  workflow_dispatch:

env:
  ACR_LOGON_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/webapp:${{ github.sha }}

jobs:
    build-deploy-image:
        
        runs-on: ubuntu-latest
        
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master
      
        - name: 'Login to azure and fetch secrets from key vault'
          uses: Azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
         
        - uses: Azure/get-keyvault-secrets@v1
          with: 
            keyvault: "containerappsvault"
            secrets: 'AZURE-SUBSCRIPTION-ID, AZURE-TENANT-ID, SERVICE-PRINCIPAL-ID, SERVICE-PRINCIPAL-PASSWORD'
          id: myAppsBuildSecrets
          
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ env.ACR_LOGON_SERVER }}
            username: ${{ steps.myAppsBuildSecrets.outputs.SERVICE-PRINCIPAL-ID }}
            password: ${{ steps.myAppsBuildSecrets.outputs.SERVICE-PRINCIPAL-PASSWORD }}

        - name: Build and push container image to registry
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: |
             ${{ env.IMAGE_NAME }}
            file: dockersampledemo/Dockerfile
            context: ./

    expose-env:
      
        needs: build-deploy-image
        runs-on: ubuntu-latest 
        outputs:
          rg-name: ${{ steps.print-var.outputs.rg-name }}
          location-name: ${{ steps.print-var.outputs.location-name }}
          image-name: ${{ steps.print-var.outputs.image-name }}
          acr-server: ${{ steps.print-var.outputs.acr-server }}

        steps:
          - name: Print inputs passed to the reusable workflow
            id: print-var
            run: |
              echo "::set-output name=rg-name::${{ secrets.RG_NAME }}"
              echo "::set-output name=location-name::${{ secrets.RG_LOCATION }}"
              echo "::set-output name=image-name::${{ env.IMATE_NAME }}"
              echo "::set-output name=acr-server::${{ secrets.ACR_NAME }}.azurecr.io"

    deploy:
   


      needs: expose-env
    
      uses: ./.github/workflows/customer-container-deploy.yml
      with:
        CUSTOMER-CONTAINER-NAME: Customer-PQR
        CUSTOMER-ENV-NAME: customersManagedEnv-PQR
        RG_NAME: ${{ needs.expose-env.outputs.rg-name }}
        RG_LOCATION: ${{ needs.expose-env.outputs.location-name }}
        IMAGE_NAME: ${{ needs.expose-env.outputs.image-name }}
        REGISTRY_SERVER-NAME: ${{ needs.expose-env.outputs.acr-server }}
     

